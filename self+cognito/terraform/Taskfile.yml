version: '3'
tasks:
  get-ws-url:
    cmds:
      - terraform output -json | jq -j '.gw_ws_url.value'

  get-http-url:
    cmds:
      - terraform output -json | jq -j '.gw_http_url.value'

  create-cognito-user:
    desc: This will create a new user in the cognito pool deployed by the terraform it will create a new password for it, be sure to have the correct AWS credentials configured
    vars:
      USERNAME: '{{default "a_user" .USERNAME}}'
      OLD_PASSWORD: '{{default "abc1-Dand" .OLD_PASSWORD}}'
      NEW_PASSWORD: '{{default "zpwe2-Dand" .NEW_PASSWORD}}'
    cmds:
      - |
        COG_CLIENT_ID=$(terraform output -json | jq -j '.client_id.value')
        COG_POOL_ID=$(terraform output -json | jq -j '.user_pool_id.value')
        aws cognito-idp admin-create-user --user-pool-id ${COG_POOL_ID} --username {{.USERNAME}} --temporary-password={{.OLD_PASSWORD}} > /dev/null
        NEW_USER_SESSION=$(aws cognito-idp initiate-auth --auth-flow USER_PASSWORD_AUTH --client-id ${COG_CLIENT_ID} --auth-parameters USERNAME={{.USERNAME}},PASSWORD={{.OLD_PASSWORD}} --output text --query 'Session')
        aws cognito-idp respond-to-auth-challenge --client-id ${COG_CLIENT_ID} --challenge-name NEW_PASSWORD_REQUIRED --session ${NEW_USER_SESSION} --challenge-responses USERNAME={{.USERNAME}},NEW_PASSWORD={{.NEW_PASSWORD}} >/dev/null

  get-cognito-user-jwt:
    desc: This will get a new cognito JWT using user credentials, be sure to have the correct AWS credentials configured
    vars:
      USERNAME: '{{default "a_user" .USERNAME}}'
      PASSWORD: '{{default "zpwe2-Dand" .NEW_PASSWORD}}'
    cmds:
      - |
        COG_CLIENT_ID=$(terraform output -json | jq -j '.client_id.value')
        aws cognito-idp initiate-auth --auth-flow USER_PASSWORD_AUTH --client-id ${COG_CLIENT_ID} --auth-parameters USERNAME={{.USERNAME}},PASSWORD={{.PASSWORD}} --output text --query 'AuthenticationResult.IdToken'
